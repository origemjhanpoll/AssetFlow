// Mocks generated by Mockito 5.4.4 from annotations
// in asset_flow/test/domain/usecases/get_companies_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:asset_flow/domain/entities/asset.dart' as _i6;
import 'package:asset_flow/domain/entities/company.dart' as _i4;
import 'package:asset_flow/domain/entities/location.dart' as _i5;
import 'package:asset_flow/domain/repositories/i_assets_repository.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [IAssetsRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockIAssetsRepository extends _i1.Mock implements _i2.IAssetsRepository {
  MockIAssetsRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.Company>> getCompanies() => (super.noSuchMethod(
        Invocation.method(
          #getCompanies,
          [],
        ),
        returnValue: _i3.Future<List<_i4.Company>>.value(<_i4.Company>[]),
      ) as _i3.Future<List<_i4.Company>>);

  @override
  _i3.Future<List<_i5.Location>> getLocations({required String? companyId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getLocations,
          [],
          {#companyId: companyId},
        ),
        returnValue: _i3.Future<List<_i5.Location>>.value(<_i5.Location>[]),
      ) as _i3.Future<List<_i5.Location>>);

  @override
  _i3.Future<List<_i6.Asset>> getAssets({required String? companyId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAssets,
          [],
          {#companyId: companyId},
        ),
        returnValue: _i3.Future<List<_i6.Asset>>.value(<_i6.Asset>[]),
      ) as _i3.Future<List<_i6.Asset>>);
}
